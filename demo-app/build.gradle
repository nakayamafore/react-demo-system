plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "nu.studer.jooq" version '9.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	jooqGenerator 'com.mysql:mysql-connector-j'
	implementation 'org.hibernate:hibernate-validator:8.0.1.Final'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'org.flywaydb:flyway-core:10.10.0'
	implementation 'org.flywaydb:flyway-mysql:10.10.0'
	
	
}
jooq {
  version = '3.18.11'
  edition = nu.studer.gradle.jooq.JooqEdition.OSS
  configurations {
    main {
      generateSchemaSourceOnCompilation = true
      generationTool {
        jdbc {
          driver = 'com.mysql.cj.jdbc.Driver'
          url = 'jdbc:mysql://localhost:3306/demosys?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Tokyo'
          user = 'demoadmin'
          password = '#Bagabondo13'
        }
        generator {
          name = 'org.jooq.codegen.DefaultGenerator'
          strategy {
            name = null
            matchers {
              tables {
                table {
                  pojoClass {
                    transform = 'PASCAL'
                    expression = '\$0_ENTITY'
                  }
                }
              }
            }
          }
          database {
            name = 'org.jooq.meta.mysql.MySQLDatabase'
            includes = '.*'
            inputSchema = 'demosys'
            outputSchemaToDefault = true
          }
          generate {
            javaTimeTypes = true
            pojos = true
            daos = false
            records = true
          }
          target {
            packageName = 'com.example.demoapp'
            directory = 'src/main/jooq'
          }
        }
      }
    }
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
